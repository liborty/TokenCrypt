#!/bin/bash
# general encryption-decryption test
# expcrypt encrypts all files in the given directory
# impcrypt decrypts back all the encrypted files

PROGN=${0##*/}
# make this output unique to facilitate git commit working in 
# automated tests run at github actions:
printf "$PROGN run on: %s %s %s %s\n\n" $( date -u "+%d.%m.%y at %H:%M:%S %Z" )

case $# in
	0)
		printf "$PROGN quitting, requires a path argument\n" >&2
		exit 2;; 
	1)
  		if ! [ -d "$1" ]; then
		printf "$PROGN quitting, input directory name $1 not found\n" >&2
		exit 2; fi;;
	*) 
		printf "$PROGN quitting, too many arguments, needs just one input path\n" >&2
		exit 2;;
esac

# make up some names for the files and directory to be produced by this test
INDXFILE=_"$1"idx
OUTFILE=_"$1"crp
KEYFILE=_"$1"key
ORGDIR=_"$1"org

# check that output files do not already exist
[ -f "$INDXFILE" ] && {
	printf "$PROGN: '$INDXFILE' already exists here!\n" >&2; exit 2; }
[ -f "$OUTFILE" ] && { 
	printf "$PROGN: '$OUTFILE' already exists here!\n" >&2; exit 2; }
[ -f "$KEYFILE" ] && {
	printf "$PROGN: '$KEYFILE' already exists here!\n" >&2;	exit 2; }
[ -d "$ORGDIR" ] && { 
	printf "$PROGN: '$ORGDIR' already exists here!\n" >&2; exit 2; }

# encrypt and decrypt
pack -xbr $1 $INDXFILE $OUTFILE $KEYFILE
printf "\n"
mv $1 $ORGDIR
unpack $INDXFILE $OUTFILE $KEYFILE
diff -bqr $1 $ORGDIR && printf "\n$PROGN diff: '$1' and '$ORGDIR' are identical\n"
rm -rf $1 $INDXFILE $OUTFILE $KEYFILE >&2
mv $ORGDIR $1
