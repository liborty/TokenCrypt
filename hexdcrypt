#!/bin/bash
# hexadecimal decryption
# hexdcrypt decrypts all *.scr binary encrypted files in the current directory 
# into their corresponding decrypted *.hex files
# expects one binary keyfile argument, e.g. key.bin
# keygen will generate a suitable key.bin file for both encrypting and decrypting
# to hex encode any file, use: xxd -p file > hexfile
# to revert back: xxd -p -r hexfile > file

noext() {
	local c=$( ls -1 *."$1" 2>/dev/null | wc -l )
if [ $c -eq 0 ]; then return 0; 
else return 1
fi 
}

if $( noext scr ); then
	printf "${0##*/} quitting, no .scr files here in $(pwd)\n" 1>&2
	exit 2
fi

if [ $# -ne 1 ]; then
	printf "${0##*/} needs keyfile argument\n" 1>&2 
	exit 2
fi
if ! [ -f "$1" ]; then
	printf "${0##*/}: quitting, keyfile '$1' not found\n" 1>&2
	exit 2
fi

for file in ./*.scr; do
    [ -f "$file" ] || continue
    let count+=1
	 symcrypt $1 $file | xxd -p > ${file%.scr}.hex 
done
printf "${0##*/} decrypted $count files\n" 1>&2
