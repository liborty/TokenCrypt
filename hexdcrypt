#!/bin/bash
# hexadecimal decryption
# hexdcrypt decrypts all *.scr binary encrypted files in the current directory 
# into their corresponding decrypted *.hex files
# expects one binary keyfile argument, e.g. key.bin
# keygen will generate a suitable key.bin file for both encrypting and decrypting
# to hex encode any file, use: xxd -p file > hexfile
# to revert back: xxd -p -r hexfile > file

PROGN=${0##*/}

noext() {
	local c=$( ls -1 *."$1" 2>/dev/null | wc -l )
if [ $c -eq 0 ]; then return 0; 
else return 1
fi 
}

if $( noext scr ); then
	printf "$PROGN quitting, no .scr files here in $(pwd)\n" 1>&2
	exit 2
fi

if [ $# -ne 1 ]; then
	printf "$PROGN needs keyfile argument\n" 1>&2 
	exit 2
fi
if ! [ -f "$1" ]; then
	printf "$PROGN quitting, keyfile '$1' not found\n" 1>&2
	exit 2
fi

for FILE in ./*.scr; do
    [ -f "$FILE" ] || continue
    let COUNT+=1
	symcrypt $1 $FILE | xxd -p > ${FILE%.scr}.hex 
done
printf "$PROGN decrypted $COUNT files\n" 1>&2
