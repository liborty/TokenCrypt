#!/bin/bash
# general encryption-decryption test
# ecrypt encrypts all files in the given directory
# dcrypt decrypts back all the encrypted files

PROGN=${0##*/}
# make this output unique to facilitate git commit working in 
# automated tests run at github actions:
printf "$PROGN run on: %s %s %s %s\n" $( date -u "+%d.%m.%y at %H:%M:%S %Z" )

case $# in
	0)
		printf "$PROGN quitting, requires a path argument\n" >&2
		exit 2;; 
	1)
  		if ! [ -d "$1" ]; then
		printf "$PROGN quitting, input directory name $1 not found\n" >&2
		exit 2; fi;;
	*) 
		printf "$PROGN quitting, too many arguments, needs just one input path\n" >&2
		exit 2;;
esac

# directory names, preceding path is stripped off, so all output goes to ./
KEYDIR="$1"key # must separate _ from the variable name
OUTDIR="$1"crypt
ORGDIR="$1"org

# check that outputs directories do not already exist
if [ -d "$KEYDIR" ]; then
	printf "$PROGN quitting, '$KEYDIR' already exists here!\n" >&2;	exit 2; fi
if [ -d "$OUTDIR" ]; then 
	printf "$PROGN quitting, '$OUTDIR' already exists here!\n" >&2; exit 2; fi
if [ -d "$ORGDIR" ]; then 
	printf "$PROGN quitting, '$ORGDIR' already exists here!\n" >&2; exit 2; fi

# encrypt and decrypt
ncrpt -xbr $1 $KEYDIR $OUTDIR
dcrpt -r $OUTDIR $KEYDIR $ORGDIR
diff -bqr $1 $ORGDIR && printf "$PROGN: '$1' and '$ORGDIR' are identical\n"
rm -rf $ORGDIR $OUTDIR $KEYDIR >&2
