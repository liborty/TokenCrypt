#!/bin/bash
# encrypts all files in the specified directory 'dirname' (can be ./)
# into corresponding encrypted binary files in local directory 'dirname-ecr' 
# with corresponding key files in 'dirname-key'

PNAME=${0##*/}

case $# in
	0)
		printf "$PNAME quitting, requires one path argument\n"
		exit 2;; 
	1)
      	if ! [ -d "$1" ]; then
		printf "$PNAME quitting, directory $1 not found\n"
		exit 2; fi;;
	*) 
		printf "$PNAME quitting, too many arguments, needs just one path\n" 
		exit 2;;
esac

DIREND=${1##*/}
# output directory for plain encrypted versions
if ! [ -d "$DIREND"_ecr ]; then mkdir "$DIREND"_ecr; fi
# compressed encrypted outputs versions
if ! [ -d "$DIREND"_elz ]; then mkdir "$DIREND"_elz; fi
# keys directory
if ! [ -d "$DIREND"_key ]; then mkdir "$DIREND"_key; fi

for FILE in $1/*; do
    [ -f "$FILE" ] || continue
    let COUNT+=1
	FILEND=${FILE##*/}
	lzma -z -c $FILE > $FILEND.lz
	ORGS=$( stat -c%s $FILE )
	CMPS=$( stat -c%s $FILEND.lz )

	if [ "$ORGS" -gt  "$CMPS" ]; then # compress only if smaller
		keygen $FILEND.lz > "$DIREND"_key/$FILEND
		symcrypt "$DIREND"_key/$FILEND $FILEND.lz "$DIREND"_elz/$FILEND
	else
		keygen $FILE > "$DIREND"_key/$FILEND
		symcrypt "$DIREND"_key/$FILEND $FILE "$DIREND"_ecr/$FILEND
	fi
	rm $FILEND.lz
done
printf "$PNAME: encrypted $COUNT files into ./"$DIREND"_key ./"$DIREND"_ecr ./"$DIREND"_elz\n"
